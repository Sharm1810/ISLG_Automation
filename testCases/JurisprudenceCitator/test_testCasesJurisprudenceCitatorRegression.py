import time

import pytest
import softest
from selenium.webdriver.common.by import By

from pageObjects.ArticleCitator import ArticleCitator
from pageObjects.JurisprudenceCitator import JurisprudenceCitator
from pageObjects.LoginPage import LoginPage
from pageObjects.SubjectNavigator import SubjectNavigator
from utilities.readProperties import ReadConfig
from utilities.customLogger import LogGen
from selenium.webdriver.common.keys import Keys
from selenium.webdriver import ActionChains
from bs4 import BeautifulSoup
import requests
import string
import pyperclip
import pandas as pd
import random

@pytest.mark.usefixtures("setup")
class Test_testCasesJurisprudenceCitatorRegression(softest.TestCase):
    logger = LogGen.loggen()

    #@pytest.mark.skip(reason="None")
    def test_metaDataLinks(self):
        self.logger.info("****TestCase AC-001 - Verify Navigation links***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jursiprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(4)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                getext = self.driver.find_element(By.LINK_TEXT, "Jurisprudence Citator")
                text = getext.text
                if text == "Jurisprudence Citator":
                    print(text)
                    self.logger.info(text)
                else:
                    self.logger.info("Name doesn't match")
                time.sleep(2)
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_AdddocumentComparison(self):
        self.logger.info("****TestCase AC-002 - Verify Add to Document Comparison***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jursiprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        self.navigator.clickOnFirstJurisprudence()
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.addToDocumentComparison()
                # clickdocument = self.driver.find_element(By.XPATH, "//button[@title='Add to Document Comparison']")
                # self.driver.execute_script("arguments[0].click();", clickdocument)
                time.sleep(3)
                self.logger.info("Full Case Analysis - Clicked on Add to Document Comparison")
                self.navigator.selectDocumentComparisonOption()
                time.sleep(2)
                self.logger.info("Selected the first document comparison option")
                self.navigator.clickOnAddDocumentCompare()
                time.sleep(2)
                self.logger.info("Added to Document Comparison")
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_CanceldocumentComparison(self):
        self.logger.info("****TestCase AC-003 - Verify Cancel Add to Document Comparison***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.addToDocumentComparison()
                time.sleep(3)
                self.logger.info("Full Case Analysis - Clicked on Add to Document Comparison")
                self.navigator.selectDocumentComparisonOption()
                time.sleep(3)
                self.logger.info("Selected the first document comparison option")
                self.navigator.clickOnCancelCompare()
                time.sleep(2)
                self.logger.info("Clicked on Cancel and Closed the Add to Document Comparison screen")
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_SeeAllGroups(self):
        self.logger.info("****TestCase AC-004 - Verify See All groups- Add to Document Comparison***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.addToDocumentComparison()
                time.sleep(2)
                self.navigator.clickOnSeeAllGroups()
                time.sleep(2)
                self.driver.switch_to.window(self.driver.window_handles[2])
                self.driver.close()
                time.sleep(2)
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.driver.switch_to.window(self.driver.window_handles[1])
                self.driver.close()
                self.driver.switch_to.window(self.driver.window_handles[0])
                time.sleep(3)

    #@pytest.mark.skip(reason="None")
    def test_Notepad(self):
        self.logger.info("****TestCase AC-005 - Verify Research Notepad- Add to ResearchNotepad***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.clickOnResearch()
                self.logger.info("Full Case Analysis - Clicked on Research Notepad")
                time.sleep(2)
                self.navigator.selectResearchOption()
                self.logger.info("Selected Research Option")
                time.sleep(3)
                self.navigator.clickOnAddNotepad()
                self.logger.info("Clicked on Add to Notepad")
                time.sleep(3)
                # researchOption = self.driver.find_element(By.XPATH, "(//label[@class='form__radio']//input)[1]")
                # self.driver.execute_script("arguments[0].click();", researchOption)
                self.logger.info("Clicked on Add to Notepad")
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_SeeAllTopics(self):
        self.logger.info("****TestCase AC-006 - Verify Research Notepad- See All Topics***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        #Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.clickOnResearch()
                self.logger.info("Full Case Analysis - Clicked on Research Notepad")
                time.sleep(2)
                self.navigator.selectResearchOption()
                time.sleep(2)
                self.navigator.clickOnSeeAllTopics()
                time.sleep(2)
                title = self.driver.find_element(By.XPATH, "/html/head/title")
                print(title.text)
                self.driver.get('https://app.investorstatelawguide.com/ResearchNotepad')
                print(self.driver.title)
                assert 'Research Notepad' in self.driver.title
                self.logger.info(self.driver.title)
                time.sleep(2)
                self.driver.switch_to.window(self.driver.window_handles[2])
                self.driver.close()
                time.sleep(1)
                self.driver.switch_to.window(handle)
                time.sleep(1)
                self.driver.switch_to.window(self.driver.window_handles[1])
                self.driver.close()
                self.driver.switch_to.window(self.driver.window_handles[0])

    #@pytest.mark.skip(reason="None")
    def test_closeResearchNotepad(self):
        self.logger.info(
            "****TestCase AC-007 - Verify Research Notepad- Cancel Research Notepad (Back arrow link)***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Publication Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        #Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.clickOnResearch()
                self.logger.info("Full Case Analysis - Clicked on Research Notepad")
                time.sleep(3)
                self.navigator.selectResearchOption()
                time.sleep(3)
                self.navigator.clickOnCloseResearchNotepad()
                time.sleep(3)
                self.logger.info("Closed research Notepad popup")
                time.sleep(2)
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_createResearchTopic(self):
        self.logger.info("****TestCase AC-008 - Verify Research Notepad- Create New Research Topic***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.clickOnResearch()
                self.logger.info("Full Case Analysis - Clicked on Research Notepad")
                time.sleep(2)
                self.navigator.selectResearchOption()
                time.sleep(2)
                self.navigator.clickOnCreateResearchTopic()
                time.sleep(2)
                self.logger.info("Clicked on Create New Research Topic")
                time.sleep(2)
                self.navigator.sendTopic()
                time.sleep(2)
                self.logger.info("Topic is entered")
                time.sleep(2)
                self.navigator.clickOnSave()
                time.sleep(2)
                self.logger.info("Clicked on Save Topic")
                time.sleep(2)
                selectedText = self.driver.find_element(By.XPATH,
                                                        "//*[@id='popup-add-to-rn']/div[1]/div[2]/div/ul/li[1]/label")
                time.sleep(2)
                topicText = selectedText.get_attribute("title")
                print(topicText)
                time.sleep(2)
                self.logger.info("Entered Topic equals the first option label  " + topicText)
                time.sleep(2)
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_copyCitation(self):
        self.logger.info("****TestCase AC-009 - Verify Copy Citation***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.clickOnCopyCitationLink()
                time.sleep(2)
                self.logger.info("Clicked on Copy Citation Link")
                time.sleep(1)
                self.logger.info("Toast Message - Citation Copied to clipboard")
                time.sleep(2)
                self.driver.close()
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_downloadDocumentLink(self):
        self.logger.info("****TestCase AC-010 - Verify Download Document***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnDownloadDocumentLink()
                time.sleep(3)
                self.logger.info("Clicked on Download Document")
                self.driver.close()
                time.sleep(2)
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_viewPDF(self):
        self.logger.info("****TestCase AC-011 - Verify View PDF***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnViewPDF()
                time.sleep(2)
                self.logger.info("Clicked on View PDF link")
                self.driver.close()
                time.sleep(2)
            self.driver.switch_to.window(parent_handle)

    #@pytest.mark.skip(reason="None")
    def test_SubjectNavigatorNavigation(self):
        self.logger.info("****TestCase AC-012 - Verify Subject Navigator from the navigation menu***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnSubjectNavigatorMenu()
                time.sleep(2)
                self.logger.info("Clicked on Subject Navigator menu")
                self.navigator.clickOnSubjectNavigatorLink()
                time.sleep(2)
                self.logger.info("Expanded first link under Subject Navigator")
                time.sleep(2)
                subjectNavigatorLink = self.driver.find_element(By.XPATH, "//*[@id='document-view']/nav/ul/li[1]/a")
                if subjectNavigatorLink.text == "Subject Navigator":
                    self.logger.info("Subject Navigator is displayed")
                else:
                    self.logger.info("Subject Navigator is not displayed")
                self.driver.close()
                time.sleep(2)
        self.driver.switch_to.window(parent_handle)
        time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_PublicationNavigation(self):
        self.logger.info("****TestCase AC-013 - Verify Publication Citator from the navigation menu***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnPublicationCitatorMenu()
                time.sleep(2)
                self.logger.info("Clicked on Publication Citator menu")
                self.navigator.clickOnPublicationLink()
                time.sleep(2)
                self.logger.info("Expanded first link under Publication Citator")
                time.sleep(2)
                self.driver.close()
                time.sleep(2)
            self.driver.switch_to.window(parent_handle)
            time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_ArticleCitatorNavigation(self):
        self.logger.info("****TestCase AC-014 - Verify Article Citator from the navigation menu***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnArticleCitatorMenu()
                time.sleep(2)
                self.logger.info("Clicked on Article Citator menu")
                self.navigator.clickOnArticleCitatorLink()
                time.sleep(2)
                self.logger.info("Expanded first link under Article Citator")
                time.sleep(2)
                self.driver.close()
                time.sleep(2)
            self.driver.switch_to.window(parent_handle)
            time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_TermsAndPhrasesNavigation(self):
        self.logger.info("****TestCase AC-015 - Verify Terms & Phrases from the navigation menu***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnTermsAndPhrasesMenu()
                time.sleep(2)
                self.logger.info("Clicked on Terms And Phrases menu")
                self.navigator.clickOnTermsAndPhrasesLink()
                time.sleep(2)
                self.logger.info("Expanded first link under Terms And Phrases")
                time.sleep(2)
                self.driver.close()
                time.sleep(2)
            self.driver.switch_to.window(parent_handle)
            time.sleep(3)

    #@pytest.mark.skip(reason="None")
    def test_KeywordSearchNavigation(self):
        self.logger.info("****TestCase AC-016 - Verify Keyword Search from the navigation menu***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(2)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.navigator.clickOnKeywordSearch()
                time.sleep(3)
                self.logger.info("Clicked on Keyword Search menu")
                time.sleep(3)
                self.navigator.clickOnKeywordSearchEntry()
                time.sleep(3)
                self.logger.info("Entered Keyword search")
                self.navigator.clickOnSearchButton()
                time.sleep(3)
                self.logger.info("Clicked on Search")
                time.sleep(3)
                self.driver.close()
                time.sleep(3)
            self.driver.switch_to.window(parent_handle)
            time.sleep(2)

    #@pytest.mark.skip(reason="None")
    def test_FullTextSearch(self):
        self.logger.info("****TestCase AC-017 - Verify Go To Full Text Search***")
        self.logger.info("*****Login Successful****")
        self.logger.info("**** Jurisprudence Citator testing *****")
        self.navigator = JurisprudenceCitator(self.driver)
        self.navigator.clickOnJurisprudenceMenu()
        time.sleep(2)
        # self.navigator.clickOnClientListing()
        self.logger.info("Jurisprudence Citator menu is available")
        time.sleep(2)
        self.driver.execute_script("window.scrollBy(0,500)", "")
        time.sleep(2)
        # Click on the first branch to expand
        # Click on the first branch to expand
        self.navigator.clickOnFirstJurisprudence()
        self.logger.info("First Branch is expanded")
        time.sleep(2)
        self.logger.info("Expanded Jurisprudence Citator")
        self.navigator.clickOnExpandInnerCard()
        time.sleep(2)
        self.logger.info("Expanded inner card")
        self.navigator.clickOnSeeAllRef()
        time.sleep(2)
        self.logger.info("Clicked on See All link")
        self.navigator.clickOnFullCaseAnalysis()
        time.sleep(3)
        self.logger.info("Clicked on Full Case Analysis")
        parent_handle = self.driver.current_window_handle
        print(parent_handle)
        time.sleep(2)
        all_handles = self.driver.window_handles
        print(all_handles)
        for handle in all_handles:
            if handle != parent_handle:
                self.driver.switch_to.window(handle)
                time.sleep(2)
                self.navigator.clickOnKeywordSearch()
                time.sleep(3)
                self.logger.info("Clicked on Keyword Search menu")
                time.sleep(3)
                self.navigator.clickOnKeywordSearchEntry()
                time.sleep(3)
                self.logger.info("Entered Keyword search")
                self.navigator.clickOnSearchButton()
                time.sleep(3)
                self.logger.info("Clicked on Search")
                print("Search is performed")
                print(len(self.driver.find_elements_by_class_name("highlightnode")))
                self.navigator.clickOnGoToFullTextSearch()
                time.sleep(3)
                self.logger.info("Clicked on Go To Full Text search link")
                time.sleep(3)
                self.driver.switch_to.window(self.driver.window_handles[2])
                self.driver.close()
                time.sleep(3)
                self.driver.switch_to.window(handle)
                time.sleep(3)
                self.driver.switch_to.window(self.driver.window_handles[1])
                self.driver.close()
                self.driver.switch_to.window(self.driver.window_handles[0])
            self.driver.switch_to.window(parent_handle)
            time.sleep(2)
















